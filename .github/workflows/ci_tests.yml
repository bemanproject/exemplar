# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

name: Continuous Integration Tests

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '30 15 * * *'

jobs:
  beman-submodule-check:
    uses: ./.github/workflows/reusable-beman-submodule-check.yml

  preset-test:
    uses: ./.github/workflows/reusable-beman-preset-test.yml
    with:
      matrix_config: >
        [
          {"preset": "gcc-debug", "image": "ghcr.io/bemanproject/infra-containers-gcc:latest"},
          {"preset": "gcc-release", "image": "ghcr.io/bemanproject/infra-containers-gcc:latest"},
          {"preset": "llvm-debug", "image": "ghcr.io/bemanproject/infra-containers-clang:latest"},
          {"preset": "llvm-release", "image": "ghcr.io/bemanproject/infra-containers-clang:latest"},
          {"preset": "appleclang-debug", "runner": "macos-latest"},
          {"preset": "appleclang-release", "runner": "macos-latest"},
          {"preset": "msvc-debug", "runner": "windows-latest"},
          {"preset": "msvc-release", "runner": "windows-latest"}
        ]

  build-and-test:
    uses: ./.github/workflows/reusable-beman-build-and-test.yml
    with:
      matrix_config: >
        {
          "gcc": [
            { "versions": ["15"],
              "tests": [
                { "cxxversions": ["c++26"],
                  "tests": [
                    { "stdlibs": ["libstdc++"],
                      "tests": [
                        "Debug.Default", "Release.Default", "Debug.TSan", "Debug.MaxSan",
                        "Debug.Werror", "Debug.Dynamic"
                      ]
                    }
                  ]
                },
                { "cxxversions": ["c++23", "c++20", "c++17"],
                  "tests": [{ "stdlibs": ["libstdc++"], "tests": ["Release.Default"]}]
                }
              ]
            },
            { "versions": ["14", "13"],
              "tests": [
                { "cxxversions": ["c++26", "c++23", "c++20", "c++17"],
                  "tests": [{ "stdlibs": ["libstdc++"], "tests": ["Release.Default"]}]
                }
              ]
            },
            {
              "versions": ["12", "11"],
              "tests": [
                { "cxxversions": ["c++23", "c++20", "c++17"],
                  "tests": [{ "stdlibs": ["libstdc++"], "tests": ["Release.Default"]}]
                }
              ]
            }
          ],
          "clang": [
            { "versions": ["20"],
              "tests": [
                {"cxxversions": ["c++26"],
                  "tests": [
                    { "stdlibs": ["libstdc++", "libc++"],
                      "tests": [
                        "Debug.Default", "Release.Default", "Debug.TSan", "Debug.MaxSan",
                        "Debug.Werror", "Debug.Dynamic"
                      ]
                    }
                  ]
                },
                { "cxxversions": ["c++23", "c++20", "c++17"],
                  "tests": [
                    {"stdlibs": ["libstdc++", "libc++"], "tests": ["Release.Default"]}
                  ]
                }
              ]
            },
            { "versions": ["19", "18"],
              "tests": [
                { "cxxversions": ["c++26", "c++23", "c++20", "c++17"],
                  "tests": [
                    {"stdlibs": ["libstdc++", "libc++"], "tests": ["Release.Default"]}
                  ]
                }
              ]
            },
            { "versions": ["17"],
              "tests": [
                { "cxxversions": ["c++26", "c++23", "c++20", "c++17"],
                  "tests": [{"stdlibs": ["libc++"], "tests": ["Release.Default"]}]
                }
              ]
            },
            { "versions": ["17"],
              "tests": [
                { "cxxversions": ["c++20", "c++17"],
                  "tests": [{"stdlibs": ["libstdc++"], "tests": ["Release.Default"]}]
                }
              ]
            }
          ],
          "appleclang": [
            { "versions": ["latest"],
              "tests": [
                { "cxxversions": ["c++26", "c++23", "c++20", "c++17"],
                  "tests": [{ "stdlibs": ["libc++"], "tests": ["Release.Default"]}]
                }
              ]
            }
          ],
          "msvc": [
            { "versions": ["latest"],
              "tests": [
                { "cxxversions": ["c++23"],
                  "tests": [
                    { "stdlibs": ["stl"],
                      "tests": ["Debug.Default", "Release.Default", "Debug.MaxSan"]
                    }
                  ]
                }
              ]
            }
          ]
        }

  create-issue-when-fault:
    runs-on: ubuntu-latest
    needs: [preset-test, build-and-test]
    if: failure() && github.event_name == 'schedule'
    steps:
      # See https://github.com/cli/cli/issues/5075
      - uses: actions/checkout@v4
      - name: Create issue
        run: |
          issue_num=$(gh issue list -s open -S "[SCHEDULED-BUILD] Build & Test failure" -L 1 --json number | jq 'if length == 0 then -1 else .[0].number end')

          body="**Build-and-Test Failure Report**
          - **Time of Failure**: $(date -u '+%B %d, %Y, %H:%M %Z')
          - **Commit**: [${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
          - **Action Run**: [View logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

          The scheduled build-and-test triggered by cron has failed.
          Please investigate the logs and recent changes associated with this commit or rerun the workflow if you believe this is an error."

          if [[ $issue_num -eq -1 ]]; then
            gh issue create --repo ${{ github.repository }} --title "[SCHEDULED-BUILD] Build & Test failure" --body "$body"
          else
            gh issue comment --repo ${{ github.repository }} $issue_num --body "$body"
          fi
        env:
          GH_TOKEN: ${{ github.token }}
